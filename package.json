{
  "name": "n8n-electron-wrapper",
  "version": "1.0.0",
  "description": "Electron wrapper for n8n - A secure and efficient desktop automation solution",
  "main": "src/core/main.js",
  "scripts": {
    "start": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run start:docker",
    "build": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run build:docker",
    "rebuild-deps": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run rebuild-deps:docker",
    "install-deps": "docker-compose -f python/docker-compose.yml run --rm npm-env npm install",
    "test": "jest",
    "test:watch": "mocha src/tests/**/*.test.js --watch",
    "test:debug": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run test:debug:docker",
    "monitor": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run monitor:docker",
    "monitor:dev": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run monitor:dev:docker",
    "monitor:debug": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run monitor:debug:docker",
    "debug:all": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run debug:all:docker",
    "lint": "eslint src/",
    "format": "docker-compose -f python/docker-compose.yml run --rm npm-env npm run format:docker",
    "setup:python": "python/env_handler.py setup",
    "check:python": "python/env_handler.py run python/error_handler.py",
    "clean:python": "rm -rf python/.venv",
    "rebuild:python": "npm run clean:python && npm run setup:python",
    "docker:check": "command -v docker >/dev/null 2>&1 || { echo 'Docker is not installed. Using local Python environment.'; exit 0; }",
    "docker:build": "npm run docker:check && docker-compose -f python/docker-compose.yml build",
    "docker:up": "npm run docker:check && docker-compose -f python/docker-compose.yml up",
    "docker:down": "npm run docker:check && docker-compose -f python/docker-compose.yml down",
    "docker:clean": "npm run docker:check && docker-compose -f python/docker-compose.yml down -v",
    "docker:rebuild": "npm run docker:clean && npm run docker:build",
    "start:docker": "node scripts/reset-config.js && ./python/run-with-venv.sh electron .",
    "build:docker": "./python/run-with-venv.sh electron-builder --mac",
    "rebuild-deps:docker": "./python/run-with-venv.sh electron-builder install-app-deps",
    "test:docker": "./python/run-with-venv.sh jest",
    "test:watch:docker": "./python/run-with-venv.sh node scripts/test-n8n-process.js --watch",
    "test:debug:docker": "./python/run-with-venv.sh DEBUG=n8n:* node scripts/test-n8n-process.js",
    "monitor:docker": "./python/run-with-venv.sh node scripts/monitor-n8n.js",
    "monitor:dev:docker": "./python/run-with-venv.sh NODE_ENV=development node scripts/monitor-n8n.js",
    "monitor:debug:docker": "./python/run-with-venv.sh DEBUG=n8n:* node scripts/monitor-n8n.js",
    "debug:all:docker": "./python/run-with-venv.sh DEBUG=n8n:* npm run test && npm run monitor:debug",
    "lint:docker": "./python/run-with-venv.sh eslint .",
    "format:docker": "./python/run-with-venv.sh prettier --write .",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --reporters='default' --reporters='jest-junit'",
    "lint:fix": "eslint src/ --fix",
    "dev": "nodemon src/index.js",
    "security-audit": "npm audit && snyk test",
    "update-deps": "npm update && npm audit fix",
    "prepare": "husky install",
    "test:security": "npm audit && snyk test",
    "test:all": "npm run lint && npm run test && npm run test:security"
  },
  "keywords": [
    "n8n",
    "electron",
    "automation",
    "workflow",
    "desktop-app"
  ],
  "author": {
    "name": "n8n Team",
    "email": "support@n8n.io",
    "url": "https://n8n.io"
  },
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rogu3bear/n8n.git"
  },
  "bugs": {
    "url": "https://github.com/rogu3bear/n8n/issues"
  },
  "homepage": "https://github.com/rogu3bear/n8n#readme",
  "dependencies": {
    "debug": "^4.3.4",
    "dockerode": "^4.0.0",
    "electron": "^28.0.0",
    "electron-log": "^5.1.2",
    "exceljs": "^4.4.0",
    "express": "^4.21.2",
    "jszip": "^3.10.1",
    "keytar": "^7.9.0",
    "mysql2": "^3.14.0",
    "protobufjs": "^7.4.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "semver": "^7.7.1",
    "sqlite3": "^5.1.7",
    "tmp": "^0.2.1",
    "xml2js": "^0.6.2"
  },
  "devDependencies": {
    "@babel/core": "^7.24.0",
    "@babel/preset-env": "^7.24.0",
    "@eslint/js": "^9.23.0",
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.14",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "babel-jest": "^29.7.0",
    "chai": "^4.3.7",
    "cors": "^2.8.5",
    "electron-builder": "^26.0.12",
    "electron-rebuild": "^3.2.9",
    "eslint": "^8.57.1",
    "eslint-plugin-react": "^7.37.4",
    "express-rate-limit": "^7.5.0",
    "globals": "^16.0.0",
    "helmet": "^8.1.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "lint-staged": "^15.5.0",
    "mocha": "^10.2.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.2.5",
    "rfdc": "^1.4.1",
    "snyk": "^1.1200.0",
    "ts-jest": "^29.3.0",
    "typescript": "^5.0.0",
    "typescript-eslint": "^8.28.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "build": {
    "appId": "com.n8n.desktop",
    "productName": "n8n Desktop",
    "npmRebuild": false,
    "files": [
      "src/**/*",
      "package.json"
    ],
    "directories": {
      "output": "dist"
    },
    "mac": {
      "category": "public.app-category.productivity",
      "target": [
        "dmg",
        "zip"
      ]
    },
    "win": {
      "target": [
        "nsis",
        "portable"
      ]
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "category": "Utility"
    },
    "publish": {
      "provider": "github"
    }
  },
  "engines": {
    "node": ">=18.17.0",
    "npm": ">=9.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "verbose": true,
    "setupFilesAfterEnv": [
      "<rootDir>/jest.setup.js"
    ],
    "testMatch": [
      "**/tests/**/*.test.js"
    ],
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov"
    ],
    "transform": {
      "^.+\\.js$": "babel-jest"
    },
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/src/$1"
    }
  }
}
